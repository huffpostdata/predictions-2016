var races=data.model.races

#senate-races
  h2 - State By State

  p - Our <a href="#">FIXME algorithm</a> calculated the probabile outcome in each state. Hereâ€™s the breakdown.

  .container
    .axis-50
    ul
      li data-state-code="${race.state_code}" for(race in races.sorted_by('dem-win-probability'))
        .state-code - ${race.state_code}
        .probability
          .box
            .marker.${race.dem_win_probability > 0.5 ? 'lean-dem' : (race.dem_win_probability == 0.5 ? 'toss-up' : 'lean-gop')} style="left: ${100 * (1 - race.dem_win_probability)}%"
          if(race.curve.is_plottable)
            .chart-container
              h3 - ${race.state_code}
              .grid
                .x-axis
                .y-axis
                  .max - D+${race.curve.y_max * 100}
                  .zero - 0
                  .min - R+${race.curve.y_max * 100}
                svg viewBox="0 0 1000 600" width="20rem" height="12rem"
                  rect.dem x="0" y="0" width="1000" height="300"
                  rect.gop x="0" y="300" width="1000" height="300"
                  path.axis d="M0,300H1000"
                  path.diff d="${race.curve.svg_path('diff_xibar')}"
                  path.sample d="${d}" for(d in race.curve.calculate_sample_svg_paths())
